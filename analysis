%% 2-dim Simulation Experiment

%% Initialization
clear; close all; clc;

%% Simulation - generate X,Y
% choice set: X(m,:) = [id,1/price,rate]
M = 100;
X = zeros(M,3);
% id
X(:,1) = 1:M;
% 1/price, rate
% In order to demonstrate the difference between attribute preferences, 
% choice set should have two types of products:
% type 1: high 1/price, low rate, type2: low 1/price, high rate 
% X(1:M/2,2:3) = mvnrnd([0.7,0.3],[0.0225,-0.018;-0.018,0.0225],M/2);
% X(M/2+1:M,2:3) = mvnrnd([0.3,0.7],[0.0225,-0.018;-0.018,0.0225],M/2);
X(:,2:3) = mvnrnd([0.5,0.5],[0.0225,-0.01575;-0.01575,0.0225],M);

% users: Y(n,:) = [id,age,income]
N = 200;
Y = zeros(N,3);
% id
Y(:,1) = 1:N;
% age
Y(:,2) = normrnd(0.5,0.15,N,1);
% income
Y(:,3) = normrnd(0.5,0.15,N,1);
% Y(1:N/2,2:3) = mvnrnd([0.4,0.4],[0.02,0.01;0.01,0.02],N/2);
% Y(N/2+1:N,2:3) = mvnrnd([0.6,0.6],[0.02,0.01;0.01,0.02],N/2);

%% Simulation - set parameters
% number of labels
K = 2;
% theta
thetaL = repmat(struct('muAge',0,'sdAge',0,'muInc',0,'sdInc',0),K,1);
thetaL(1).muAge = 0.3;
thetaL(1).sdAge = 0.07;
thetaL(1).muInc = 0.3;
thetaL(1).sdInc = 0.07;
thetaL(2).muAge = 0.7;
thetaL(2).sdAge = 0.07;
thetaL(2).muInc = 0.7;
thetaL(2).sdInc = 0.07;
% p0
p0 = 0.1 * ones(N,1);
% betaL(k,:) = [1/price,rate] dim:K*2
betaL = repmat(struct('p',0,'r',0),K,1);
betaL(1).p = 0.9;
betaL(1).r = 0.1;
betaL(2).p = 0.1;
betaL(2).r = 0.9;

% set choice set
C = zeros(N,17);
for n = 1:N
    C(n,1) = n;
    C(n,2:16) = randsample(M,15);
end

% get user labels, preferences, and top 3 choices according to the model
[Z,BL,TOP] = model(N,K,X,C,Y,thetaL,betaL,p0);
% get the best choice
C(:,17) = TOP(:,1);

%% Define Sampling Parameters
% hyper parameter, number of labels
K = 2;
% repetition times
R = 1000;
G = 3;
% probability of user n having label k, latent variable
PZ = zeros(R,N,K);
% samples of user characteristics represented by labels
theta = repmat(struct('muAge',0,'sdAge',0,'muInc',0,'sdInc',0),R,K);
% samples of user preferences represented by labels
beta = repmat(struct('p',0,'r',zeros(1,3)),R,K);
% accuracy of sampled model paramters
acc = zeros(100,1);

%% Initialize Sampling Parameters, r = 1
% binary vector matrix with K-1, K dims
A = binaryVecMatrix(K-1);
AA = binaryVecMatrix(K);
% AM: all combinations of labels, AM(k,:,:): all combinations of labels
% with label k
AM = zeros(K,2^(K-1),K);
for k = 1:K
    AM(k,:,:) = [A(:,1:k-1),ones(2^(K-1),1),A(:,k:end)];
end
% user characteristics represented by labels
theta0 = repmat(struct('muAge',0,'sdAge',0,'muInc',0,'sdInc',0),K,1);
% user preferences represented by labels
beta0 = repmat(struct('p',0,'r',0),K,1);
for k = 1:K
    % initialize user characteristics represented by labels
    theta0(k) = struct('muAge',rand,'sdAge',rand,'muInc',rand,'sdInc',rand);
    % initialize user preferences represented by labels
    beta0(k) = struct('p',rand,'r',rand); 
end

% probability of user n having label k, latent variable
PZ0 = ones(N,K);
for k = 1:K
    PZ0(:,k) = problabel(Y,theta0(k),p0);
end

% probability of user n choosing product Cn
PC0 = zeros(N,2^K);
% compute linear combined beta under AA(2:end,:) indicated conditons, except
% AA(1,:) which means "having none of the labels"
betatemp0 = ComputeBetatemp(AA(2:end,:),K,beta0);

for n = 1:N
    b0 = rand(1,2);
    betatemp = cat(1,b0,betatemp0);
    PC0(n,:) = probchoice(n,betatemp,X,C);
end

% probability of Y(n) generated from base population
% p1 = pdf('Normal',Y(:,2),mean(Y(:,2)),std(Y(:,2)));
% p2 = pdf('Normal',Y(:,3),mean(Y(:,3)),std(Y(:,3)));
% pgen = sum(Y(:,4:5)) ./ N;
% p3 = prod(repmat(pgen,N,1) .^ Y(:,4:5),2);
% pocc = sum(Y(:,6:8)) ./ N;
% p4 = prod(repmat(pocc,N,1) .^ Y(:,6:8),2);
% p0 = p1 .* p2 .* p3 .* p4;
p0 = 0.1 * ones(N,1);

%% Gibbs sampling
% coefficient to be multiplied to xdis
coef = 1;
for r = 1:R
    disp(r);
    for gap = 1:G
        % theta0, beta0
        for k = 1:K
            % all combinations of labels with label k
            Aa = squeeze(AM(k,:,:));
            % theta0
            % muAge
            flag = 1;
            xset = 0.1:0.01:0.8;
            xdis = coef * arrayfun(@(x) gibbsDis(flag,K,k,x,X,Y,C,PZ0,PC0,theta0,beta0,p0,AA,Aa),xset);
            theta0(k).muAge = randsample(xset,1,true,xdis);
            % sdAge
            flag = 2;
            xset = 0.1:0.01:0.2;
            xdis = coef * arrayfun(@(x) gibbsDis(flag,K,k,x,X,Y,C,PZ0,PC0,theta0,beta0,p0,AA,Aa),xset);
            theta0(k).sdAge = randsample(xset,1,true,xdis);
            % muInc
            flag = 3;
            xset = 0.1:0.01:0.8;
            xdis = coef * arrayfun(@(x) gibbsDis(flag,K,k,x,X,Y,C,PZ0,PC0,theta0,beta0,p0,AA,Aa),xset);
            theta0(k).muInc = randsample(xset,1,true,xdis);
            % sdInc
            flag = 4;
            xset = 0.1:0.01:0.2;
            xdis = coef * arrayfun(@(x) gibbsDis(flag,K,k,x,X,Y,C,PZ0,PC0,theta0,beta0,p0,AA,Aa),xset);
            theta0(k).sdInc = randsample(xset,1,true,xdis);
            % update P(Znk|Yn,theta_k) for all n
            PZ0(:,k) = problabel(Y,theta0(k),p0);
            % beta
            % 1/price
            flag = 5;
            xset = 0:0.05:1;
            xdis = coef * arrayfun(@(x) gibbsDis(flag,K,k,x,X,Y,C,PZ0,PC0,theta0,beta0,p0,AA,Aa),xset);
            beta0(k).p = randsample(xset,1,true,xdis);
            % rate
            for flag = 6
                xset = 0:0.05:1;
                xdis = coef * arrayfun(@(x) gibbsDis(flag,K,k,x,X,Y,C,PZ0,PC0,theta0,beta0,p0,AA,Aa),xset);
                beta0(k).r = randsample(xset,1,true,xdis);
            end
            % update P(Cn|beta,Zn)) for all Zn where Znk = 1, for all n
            % compute linear combined beta under Aa(label combinations) indicated conditions 
            betatemp = ComputeBetatemp(Aa,K,beta0);
            % update P(Cn|beta,Zn)) under Aa indicated conditions
            for n = 1:N
                PC0(n,ComputeIndex(Aa)) = probchoice(n,betatemp,X,C);
            end
        end
    end
    % record sampling parameters
    PZ(r,:,:) = PZ0;
    theta(r,:) = theta0;
    beta(r,:) = beta0;
    % calculate model accuracy
    if r > 900
        [~,~,TOPS] = model(N,K,X,C,Y,theta0,beta0,p0);
        acc(r - 900) = sum(ismember(C(:,17),TOPS)) / N;
    end
%     % test convergence
%     len = 5000;
%     if r == 2 * len
%         % theta mean
%         muAgem = mean(reshape([theta(r - len + 1:r,:).muAge],[len,K])); % 1*K
%         sdAgem = mean(reshape([theta(r - len + 1:r,:).sdAge],[len,K]));
%         muIncm = mean(reshape([theta(r - len + 1:r,:).muInc],[len,K]));
%         sdIncm = mean(reshape([theta(r - len + 1:r,:).sdInc],[len,K]));
%         pGenm  = squeeze(mean(reshape([theta(r - len + 1:r,:).pGen],[2,len,K]),2)); % 2*K
%         pOccm = squeeze(mean(reshape([theta(r - len + 1:r,:).pOcc],[3,len,K]),2)); % 3*K
%         % beta mean
%         muRatem = mean(reshape([beta(r - len + 1:r,:).muRate],[len,K])); % 1*K
%         sdRatem = mean(reshape([beta(r - len + 1:r,:).sdRate],[len,K]));
%         muTimem = mean(reshape([beta(r - len + 1:r,:).muTime],[len,K]));
%         sdTimem = mean(reshape([beta(r - len + 1:r,:).sdTime],[len,K]));
%         muYearm = mean(reshape([beta(r - len + 1:r,:).muYear],[len,K]));
%         sdYearm = mean(reshape([beta(r - len + 1:r,:).sdYear],[len,K]));
%         muGenrm = squeeze(mean(reshape([beta(r - len + 1:r,:).muGenr],[3,len,K]),2)); % 3*K
%         covGenrm = squeeze(mean(reshape([beta(r - len + 1:r,:).covGenr],[3,3,len,K]),3)); % 3*3*K
%      else
%         if r > 2 * len
%             % update theta mean
%             muAgem = muAgem + ([theta(r,:).muAge] - [theta(r - len,:).muAge]) ./ len;
%             sdAgem = sdAgem + ([theta(r,:).sdAge] - [theta(r - len,:).sdAge]) ./ len;
%             muIncm = muIncm + ([theta(r,:).muInc] - [theta(r - len,:).muInc]) ./ len;
%             sdIncm = sdIncm + ([theta(r,:).sdInc] - [theta(r - len,:).sdInc]) ./ len;
%             pGenm = pGenm + (reshape([theta(r,:).pGen],[2,K]) - reshape([theta(r - len,:).pGen],[2,K])) ./ len;
%             pOccm = pOccm + (reshape([theta(r,:).pOcc],[3,K]) - reshape([theta(r - len,:).pOcc],[3,K])) ./ len;
%             % update beta mean
%             muRatem = muRatem + ([beta(r,:).muRate] - [beta(r - len,:).muRate]) ./ len;
%             sdRatem = sdRatem + ([beta(r,:).sdRate] - [beta(r - len,:).sdRate]) ./ len;
%             muTimem = muTimem + ([beta(r,:).muTime] - [beta(r - len,:).muTime]) ./ len;
%             sdTimem = sdTimem + ([beta(r,:).sdTime] - [beta(r - len,:).sdTime]) ./ len;
%             muYearm = muYearm + ([beta(r,:).muYear] - [beta(r - len,:).muYear]) ./ len;
%             sdYearm = sdYearm + ([beta(r,:).sdYear] - [beta(r - len,:).sdYear]) ./ len;
%             muGenrm = muGenrm + (reshape([beta(r,:).muGenr],[3,K]) - reshape([beta(r - len,:).muGenr],[3,K])) ./ len;
%             covGenrm = covGenrm + (reshape([beta(r,:).covGenr],[3,3,K]) - reshape([beta(r - len,:).covGenr],[3,3,K])) ./ len;
%             % judge if converge theta
%             if abs([theta(r,:).muAge] - muAgem) < 0.01 .* muAgem
%                 disp('muAge converge');
%             end
%             if abs([theta(r,:).sdAge] - sdAgem) < 0.01 .* sdAgem
%                 disp('sdAge converge');
%             end
%             if abs([theta(r,:).muInc] - muIncm) < 0.01 .* muIncm
%                 disp('muInc converge');
%             end
%             if abs([theta(r,:).sdInc] - sdIncm) < 0.01 .* sdIncm
%                 disp('muAge converge');
%             end
%             if abs(reshape([theta(r,:).pGen],[2,K]) - pGenm) < 0.01 .* pGenm
%                 disp('pGen converge');
%             end
%             if abs(reshape([theta(r,:).pOcc],[3,K]) - pOccm) < 0.01 .* pOccm
%                 disp('pOcc converge');
%             end
%             % judge if converge beta
%         end
%     end
        
end
%%
acc = zeros(R,1);
for r = 1:R
    [~,~,TOPS] = model(N,K,X,C,Y,theta(r,:),beta(r,:),p0);
    acc(r) = sum(ismember(C(:,17),TOPS)) / N;
end 
%% Plot Accuracy
plot(1:100,acc);
axis([0 100 0 1]);
xlabel('iteration');
ylabel('accuracy');
title('Model Accuracy');
%% Plot
% X
plot(X(:,2),X(:,3),'.');
axis([0 1 0 1]);
xlabel('1/price');
ylabel('rate');
title('Choice Set');
% Y
plot(Y(find(Z(:,1)>0),2),Y(find(Z(:,1)>0),3),'*');
xlabel('age');
ylabel('income');
title('Users');
hold on;
plot(Y(find(Z(:,2)>0),2),Y(find(Z(:,2)>0),3),'o');
plot(Y(find(sum(Z,2)==0),2),Y(find(sum(Z,2)==0),3),'.');
legend('Label 1','Label 2','No labels');
plot(thetaL(1).muAge,thetaL(1).muInc,'r.','MarkerSize',20);
plot(thetaL(2).muAge,thetaL(2).muInc,'r.','MarkerSize',20);
hold off;
%% Plot
% betaL
plot(betaL(1,1),betaL(1,2),'k*','MarkerSize',10);
hold on;
plot(betaL(2,1),betaL(2,2),'ko','MarkerSize',10);
axis([0,1,0,1]);
% plot(0.5,0.5,'r.','MarkerSize',20);
xlabel('price sensitive');
ylabel('rate sensitive');
title('Preference');
legend('Label 1','Label 2','user n');
hold off;
%% Plot
% theta beta
figure
% theta label 1
subplot(2,2,1);
plot([theta(:,1).muAge],[theta(:,1).muInc],'.');
title('label 1');
xlabel('muAge');
ylabel('muInc');
% theta label 2
subplot(2,2,2);
plot([theta(:,2).muAge],[theta(:,2).muInc],'.');
title('label 2');
xlabel('muAge');
ylabel('muInc');
% beta label 1
subplot(2,2,3);
plot([beta(:,1).p],[beta(:,1).r],'.');
title('label 1');
xlabel('price sensitive');
ylabel('rate sensitive');
% beta label 2
subplot(2,2,4);
plot([beta(:,2).p],[beta(:,2).r],'.');
title('label 2');
xlabel('price sensitive');
ylabel('rate sensitive');
%% Plot
% theta beta partly
set = 900:1000;
figure
% theta label 1
subplot(2,2,1);
plot([theta(set,1).muAge],[theta(set,1).muInc],'.');
title('label 1');
xlabel('muAge');
ylabel('muInc');
% theta label 2
subplot(2,2,2);
plot([theta(set,2).muAge],[theta(set,2).muInc],'.');
title('label 2');
xlabel('muAge');
ylabel('muInc');
% beta label 1
subplot(2,2,3);
plot([beta(set,1).p],[beta(set,1).r],'.');
title('label 1');
xlabel('price sensitive');
ylabel('rate sensitive');
% beta label 2
subplot(2,2,4);
plot([beta(set,2).p],[beta(set,2).r],'.');
title('label 2');
xlabel('price sensitive');
ylabel('rate sensitive');
%% Plot
% theta 1 2
figure
filename = 'theta-1,2.gif';
for r = 1:100
    plot(theta(r,1).muAge,theta(r,1).muInc,'*');
    xlabel('muAge');
    ylabel('muInc');
    axis([0.1 0.8 0.1 0.8])
    hold on;
    plot(theta(r,2).muAge,theta(r,2).muInc,'o');
    hold off;
    drawnow
    frame = getframe(1);
    im = frame2im(frame);
    [imind,cm] = rgb2ind(im,256);
    if r == 1;
      imwrite(imind,cm,filename,'gif', 'Loopcount',1,'DelayTime',1);
    else
      imwrite(imind,cm,filename,'gif','WriteMode','append','DelayTime',1);
    end
end

% beta 1 2
figure
filename = 'beta-1,2(1-100).gif';
for r = 1:100
    plot(beta(r,1).p,beta(r,1).r,'*');
    xlabel('1/price');
    ylabel('rate');
    axis([0 1 0 1])
    hold on;
    plot(beta(r,2).p,beta(r,2).r,'o');
    hold off;
    drawnow
    frame = getframe(1);
    im = frame2im(frame);
    [imind,cm] = rgb2ind(im,256);
    if r == 1;
      imwrite(imind,cm,filename,'gif', 'Loopcount',1,'DelayTime',1);
    else
      imwrite(imind,cm,filename,'gif','WriteMode','append','DelayTime',1);
    end
end
% theta beta 1 2
figure
filename = 'theta-beta-1,2(4901-5000).gif';
for r = 1:100
    plot(theta(4900+r,1).muAge,theta(4900+r,1).muInc,'b*');
    xlabel('muAge   1/price (theta:b  beta:r)');
    ylabel('muInc   rate');
    axis([0 1 0 1])
    hold on;
    plot(theta(4900+r,2).muAge,theta(4900+r,2).muInc,'bo');
    plot(beta(r,1).p,beta(r,1).r,'r*');
    plot(beta(r,2).p,beta(r,2).r,'ro');
    hold off;
    drawnow
    frame = getframe(1);
    im = frame2im(frame);
    [imind,cm] = rgb2ind(im,256);
    if r == 1;
      imwrite(imind,cm,filename,'gif', 'Loopcount',1,'DelayTime',1);
    else
      imwrite(imind,cm,filename,'gif','WriteMode','append','DelayTime',1);
    end
end
%% Plot focus on one user
usid = 1;
% Y
plot(Y(find(Z(:,1)>0),2),Y(find(Z(:,1)>0),3),'*');
xlabel('age');
ylabel('income');
title('Users');
hold on;
plot(Y(find(Z(:,2)>0),2),Y(find(Z(:,2)>0),3),'o');
plot(Y(find(sum(Z,2)==0),2),Y(find(sum(Z,2)==0),3),'.');
plot(Y(usid,2),Y(usid,3),'r.','MarkerSize',20);
legend('Label 1','Label 2','No labels','User 1');
hold off;
% beta
plot(BL(usid,1),BL(usid,2),'r.','MarkerSize',20);
axis([0 1 0 1]);
xlabel('price sensitive');
ylabel('rate sensitive');
title('Preference of user 1');
% choice
plot(X(C(usid,2:16),2),X(C(usid,2:16),3),'.');
axis([0 1 0 1]);
xlabel('1/price');
ylabel('rate');
title('Choice of user 1');
hold on;
plot(X(C(usid,17),2),X(C(usid,17),3),'r.','MarkerSize',20);
legend('Choice set','Choice');
hold off;


